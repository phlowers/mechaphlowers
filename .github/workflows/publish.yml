
name: Upload Python package test

on:
  release:
    types: [published]

jobs:
  release-ci:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest]
        python:
          - {
            name: cp310,
            abi: cp310,
            version: '3.10'
          }
          - {
            name: cp311,
            abi: cp311,
            version: '3.11'
          }
          - {
            name: cp312,
            abi: cp312,
            version: '3.12'
          }
#          - {
#            name: cp313,
#            abi: cp313,
#            version: '3.13'
#          }

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4 # v4.2.2
      with:
        fetch-depth: 0 # Disable shallow clones to improve sonarcloud analysis

    - name: Set up Python ${{ matrix.python.version }}
      uses: actions/setup-python@v3 # v5.3.0
      with:
        python-version: ${{ matrix.python.version }}

    - name: Install poetry
      run: |
        sudo apt install pipx
        pipx install poetry==1.8.4
        poetry --version

    - name: Install dependencies
      run: |
        poetry install

    - name: Check code style
      run: |
        poetry run poe check-format

    - name: Lint code
      run: |
        poetry run poe lint

    - name: Check typing
      run: |
        poetry run poe typing

    - name: Run tests and generate coverage report
      run: |
        poetry run poe test-coverage

    - name: Run Sonar analysis
      uses: sonarsource/sonarcloud-github-action@383f7e52eae3ab0510c3cb0e7d9d150bbaeab838 # v3.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: |
          -Dsonar.python.coverage.reportPaths=coverage.xml

    - name: Build wheel
      run: |
        poetry build



  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    runs-on: ubuntu-latest
    # needs:
    #   - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/p/mechaphlowers
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/YOURPROJECT
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4 # v4.2.2
        with:
          fetch-depth: 0 # Disable shallow clones to improve sonarcloud analysis
      - name: Install poetry
        run: |
          sudo apt install pipx
          pipx install poetry==1.8.4
          poetry --version
      - name: Build wheel
        run: |
          poetry build
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1